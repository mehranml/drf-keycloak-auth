image: python:3.9

stages:
  - Static Analysis
  - Bootstrap
  - unit test
  - sonar
  - Build
  - Publish

linting:
  stage: Static Analysis
  before_script:
    - python --version
    - pip install pycodestyle
  script:
    - pycodestyle --format=pylint drf_keycloak_auth/

venv:
  stage: Bootstrap
  script:
    - make install-dependencies
  artifacts:
    when: on_success
    expire_in: 1 hour
    paths:
      - venv/
  only:
    refs:
      - tags
      - master

unit test:
  stage: unit test
  image: "python:3.8"
  variables:
    PYTHONDONTWRITEBYTECODE: 1
    DEBUG: 1
    DJANGO_ALLOWED_HOSTS: "localhost 127.0.0.1 [::1]"
    KEYCLOAK_SERVER_URL: https://auth.dev.ecocommons.org.au/auth/
    KEYCLOAK_REALM: ecocommons-foobar
    KEYCLOAK_CLIENT_ID: SECURE
    KEYCLOAK_CLIENT_SECRET_KEY: SECURE
    KEYCLOAK_MULTI_OIDC_JSON: SECURE
    EC_TEST_USERNAME: SECURE
    EC_TEST_PASSWORD: SECURE
  script:
    - ./setup.py install
    - python -m pip install coverage
    - coverage run --source='./' ./manage.py test testapp ${TEST_ARGS}
    - coverage report -m
    - coverage xml
  allow_failure: true
  artifacts:
      when: always
      reports:
        junit: xunit-reports/*.xml
      paths:
        - coverage.xml
        - xunit-reports/**
      expire_in: 1 week

build:
  stage: Build
  script:
    - make
  dependencies:
    - venv
  artifacts:
    when: on_success
    expire_in: 6 mos
    paths:
      - dist/
  only:
    refs:
      - tags
      - master

pypi:
  stage: Publish
  variables:
    TWINE_USERNAME: ${TWINE_USERNAME}
    TWINE_PASSWORD: ${TWINE_PASSWORD}
  script:
    - make publish-pypi
  only:
    refs:
      - tags

sonarqube-check:
  stage: sonar
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  before_script: []
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  dependencies:
    - unit test
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "main"'
      exists:
        - sonar-project.properties
      when: always
    - when: never
